get_all_offers() requests all offers from exchange


param:

{}

response:

{
  "offers": [
    {
      "offer_type": 0,
      "amount_lui": 2300000000,
      "amount_etc": 2,
      "target": "EUR",
      "location": "USA, NYC",
    "contacts": "+89876782342",
    "comment": "Best ever service",
    "payment_types": "cash",
    "expiration_time":"two days"
    }, 
    {
      "offer_type": 0,
      "amount_lui": 4300000000,
      "amount_etc": 2,
      "target": "EUR",
      "location": "USA, Washington",
    "contacts": "+89876782342",
    "comment": "Best ever service",
    "payment_types": "cash",
    "expiration_time":"two days"
    }
  ]
}


push_offer() send offer to network


param:

{
  "wallet_id" : 0,
  "od": 
    {
      "offer_type": 0,
      "amount_lui": 2300000000,
      "amount_etc": 2,
      "target": "EUR",
      "location": "USA, NYC",
    "contacts": "+89876782342",
    "comment": "Best ever service",
    "payment_types": "cash",
    "expiration_time":"two days"
    }
}

response:

{
  "status":"OK"
}



[sync] have_app_data(const QString& param)
param: ignored

response: 
{
  "status" : "TRUE", //"TRUE" or "FALSE"
  "request_id": ""   //ignored
}

[sync] store_app_data(const QString& param, const QString& pass)

param: 
"APP_BUFFER" - buffer of application in any format (may be json) fo encryption
pass: 
"PASSWORD" - password to encrypt APP_BUFFER

response: 
{
}


[sync] get_app_data(const QString& param)

param: 
{
  "pass": "12345"
}

response:

"APP_BUFFER" in case of success

or in case of failure: 

{
  "status":"FAILED" //reason fo error
}







